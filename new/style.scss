@import url(https://fontlibrary.org//face/clear-sans);

$grid-length: 4;
$grid-size: 221px;
$grid-spacing: 7px;
$tile-size: 50px;

@keyframes pop {
    0% {
        transform: scale(0);
    }
    50% {
        transform: scale(1.2);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes fade-in {
    0% {
        opacity: 0;
        transform: scale(0);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}
@mixin transform($args...) {
    -webkit-transform: $args;
    -moz-transform: $args;
    -ms-transform: $args;
    transform: $args;
}

body {
    background-color: #000000;
}

.game-container {
    margin: 0 auto;
    position: relative;
    padding: 7px;
    width: $grid-size;
    height: $grid-size;
    border-radius: 3px;
    background-color: #bbada0;
    display: block;
}

.grid-container {
    position: absolute;
    z-index: 1;
}

.tile-container {
    position: absolute;
    z-index: 2;
}

.grid-row {
    margin-bottom: 7px;
    height: $tile-size;
    &:last-child {
        margin-bottom: 0;
    }
}

.grid-cell {
    float: left;
    background-color: rgba(238, 228, 218, 0.35);
}
/* 
Explanation for CSS:

You cannot use an animation and a transformation at the same time
as far as I know.
That is why the outer div, or ".tile" is like a car
It transports the inside to wherever it needs to.
But the inside, or ".tile-text" is the div
with the background color and text.
*/

.grid-cell,
.tile,
.tile-text {
    margin-right: 7px;
    width: $tile-size;
    height: $tile-size;
    border-radius: 3px;
    &:last-child {
        margin-right: 0px;
    }
}

.tile,
.tile-text {
    position: absolute; // Makes transform() relative to the top-left corner, and I don't know why
}

.tile-text {
    font-family: "ClearSansBold", Arial, sans-serif;
    font-size: 25px;
    color: #776e65;
    text-align: center;
    line-height: $tile-size;
}

.tile-merged .tile-text {
    z-index: 5;
    animation-name: pop;
    animation-duration: 200ms;
    animation-timing-function: ease;
    animation-delay: 100ms;
    animation-fill-mode: backwards;
}

.tile-new .tile-text {
    animation-name: fade-in;
    animation-duration: 200ms;
    animation-timing-function: ease;
    animation-delay: 100ms;
    animation-fill-mode: backwards;
}

.tile {
    transition: 100ms ease-in-out;
    transition-property: transform;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;

    @for $row from 1 through $grid-length {
        @for $col from 1 through $grid-length {
            &.tile-pos-#{$row}-#{$col} {
                $xPos: floor(($tile-size + $grid-spacing) * ($col - 1));
                $yPos: floor(($tile-size + $grid-spacing) * ($row - 1));
                @include transform(translate($xPos, $yPos));
            }
        }
    }
}

// prettier-ignore
$colors: rgb(238, 228, 218) 2,
        rgb(237, 224, 200) 4,
        rgb(242, 177, 121) 8,
        rgb(245, 149, 99) 16,
        rgb(246, 124, 95) 32,
        rgb(246, 94, 59) 64,
        rgb(237, 207, 114) 128,
        rgb(237, 204, 97) 256,
        rgb(237, 200, 80) 512,
        rgb(237, 197, 63) 1024,
        rgb(237, 194, 46) 2048;

@each $color, $number in $colors {
    .tile-#{$number} .tile-text {
        background-color: $color;
    }
}
